{"version":3,"sources":["../src/ng-light-markdown.js"],"names":[],"mappings":"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","file":"ng-light-markdown.js","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['angular', 'light-markdown'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('angular'), require('light-markdown'));\n    } else {\n        // Browser globals (root is window)\n        root.ngLightMarkdown = factory(root.angular, root.lightMarkdown);\n    }\n}(this, function (angular, lightMarkdown) {\n    if (typeof angular === 'undefined' || typeof lightMarkdown === 'undefined') {\n        throw new Error('ngLightMarkdown was not loaded because one of its dependencies (AngularJS or lightMarkdown) was not met');\n    }\n\n    angular.module('ngLightMarkdown', ['ngSanitize'])\n        .provider('$lightMarkdown', lightMarkdownProvider)\n        .directive('lightMarkdown', ['$lightMarkdown', '$sanitize', lightMarkdownDirective]);\n\n    /**\n     * Angular Provider\n     * Enables configuration of lightMarkdown via angular.config and Dependency Injection into controllers, views\n     * directives, etc... This assures the directives and filters provided by the library itself stay consistent\n     * with the user configurations.\n     */\n    function lightMarkdownProvider() {\n\n        /**\n         * Gets the value of the configuration parameter by key\n         * @param {string} key The config parameter key\n         * @returns {*}\n         */\n        this.getOption = function (key) {\n            return lightMarkdown.getOption(key);\n        };\n\n        /**\n         * Sets a configuration option\n         *\n         * @param {string} key Config parameter key\n         * @param {string} value Config parameter value\n         * @returns {lightMarkdownProvider}\n         */\n        this.setOption = function (key, value) {\n            lightMarkdown.setOption(key, value);\n            return this;\n        };\n\n\n        function LMObject() {\n            /**\n             * Converts a markdown text into HTML\n             *\n             * @param {string} markdown The markdown string to be converted to HTML\n             * @returns {string} The converted HTML\n             */\n            this.toHtml = function (markdown) {\n                return lightMarkdown.toHtml(markdown);\n            };\n        }\n\n        // The object returned by service provider\n        this.$get = function () {\n            return new LMObject();\n        };\n    }\n\n\n    /**\n     * AngularJS Directive to light markdown to HTML transformation\n     *\n     * Usage example:\n     * <div light-markdown=\"markdownText\" ></div>\n     *\n     * @param {lightMarkdownProvider} $lightMarkdown\n     * @param {$sanitize} $sanitize\n     * @returns {*}\n     */\n    function lightMarkdownDirective($lightMarkdown, $sanitize) {\n        return {\n            restrict: 'A',\n            scope: {\n                lightMarkdown: '='\n            },\n            template: '<div ng-bind-html=\"trustedHtml\"></div>',\n            link: function (scope) {\n                scope.$watch('lightMarkdown', function (newValue) {\n                    var html;\n                    if (typeof newValue === 'string') {\n                        html = $lightMarkdown.toHtml(newValue);\n                        scope.trustedHtml = $sanitize(html);\n                    } else {\n                        scope.trustedHtml = typeof newValue;\n                    }\n                });\n            }\n        };\n    }\n\n    return angular.module('ngLightMarkdown');\n}));\n"]}